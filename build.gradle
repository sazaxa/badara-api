plugins {
	id 'org.springframework.boot' version '2.4.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.sazaxa'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
//	runtimeOnly 'mysql:mysql-connector-java'

	// DozerMapper
	implementation 'com.github.dozermapper:dozer-core:6.4.0'

	// jwt
	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	//RandomStringUtils : 임의의 String 값 생성하는 의존성
	compile 'org.apache.commons:commons-lang3:3.0'

	//lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//lombok-test
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	//Query DSL 추가
	implementation group: 'com.querydsl', name: 'querydsl-jpa'
	implementation group: 'com.querydsl', name: 'querydsl-apt'

	//엑셀을 위한 POI 의존성
	compile group: 'org.apache.poi', name: 'poi', version: '4.0.0'
	compile group: 'org.apache.poi', name: 'poi-ooxml', version: '4.0.0'
	compile group: 'commons-io', name: 'commons-io', version: '2.6'

	//h2-database
//	runtimeOnly 'com.h2database:h2'

	// Maria Database
	implementation 'org.mariadb.jdbc:mariadb-java-client'

	//jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//starter-web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//starter-web-test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testImplementation 'org.springframework.security:spring-security-test'
}

test {
	useJUnitPlatform()
}

configure("querydsl-sample") {
	apply plugin: "io.spring.dependency-management"

	dependencies {
		compile("com.querydsl:querydsl-core")
		compile("com.querydsl:querydsl-jpa")

		annotationProcessor("com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa") // querydsl JPAAnnotationProcessor 사용 지정
		annotationProcessor("jakarta.persistence:jakarta.persistence-api") // java.lang.NoClassDefFoundError(javax.annotation.Entity) 발생 대응
		annotationProcessor("jakarta.annotation:jakarta.annotation-api") // java.lang.NoClassDefFoundError (javax.annotation.Generated) 발생 대응
	}

	// Gradle clean을 하게되면 생성된 generated 아래 Q클래스 파일이 삭제된다
	clean {
		delete file('src/main/generated') // 인텔리제이 큐 클래스 경로
	}
}





